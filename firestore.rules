rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isAuth() && request.auth.uid == userId;
    }

    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    function isAdmin() {
      return isAuth() && getUserData(request.auth.uid).role == 'admin';
    }

    function isTeacher() {
      return isAuth() && getUserData(request.auth.uid).role == 'teacher';
    }

    function isTeacherForClass(classId) {
        return isTeacher() && getUserData(request.auth.uid).classId == classId;
    }

    // Admins can manage all user records. Users can only manage their own.
    match /users/{userId} {
      allow read, list: if isAdmin();
      allow write: if isAdmin() || isUser(userId);
      allow get: if isUser(userId);
    }
    
    // Students can only be managed by Admins. Teachers can only read students in their own class.
    match /students/{studentId} {
      allow read, write, create, delete, list: if isAdmin();
      allow get, list: if isTeacher() && resource.data.classId == getUserData(request.auth.uid).classId;
    }

    // Incidents can be created by teachers. Admins have full access. Teachers can only read incidents they created.
    match /incidents/{incidentId} {
      allow read, write, list: if isAdmin();
      allow create: if isTeacher();
      // A teacher can only read incidents they have created.
      allow get, list: if isTeacher() && resource.data.teacherId == request.auth.uid;
    }

    // Summaries can be read by admins or the teacher of the class.
    match /summaries/{summaryId} {
      allow read, write, list: if isAdmin();
      allow get, list: if isTeacher() && resource.data.classId == getUserData(request.auth.uid).classId;
    }
    
     match /classes/{classId} {
      allow read, write: if isAdmin();
    }

    match /classes/{classId}/students/{studentId} {
        allow read: if isAdmin() || isTeacherForClass(classId);
        allow write: if isAdmin();
    }
  }
}
