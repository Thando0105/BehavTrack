rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users collection
    match /users/{userId} {
      // Allow user to read/write their own doc, OR an admin to write to any user doc.
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if (request.auth != null && request.auth.uid == userId) || isAdmin();
    }

    // Students collection
    match /students/{studentId} {
      // Admins can read/list/write all students
      allow get, list, read, write: if isAdmin();

      // Teachers: only see students in their class
      allow get, list, read: if isTeacher() &&
        resource.data.classId in getTeacherClasses();
    }
    
    // Incidents collection
    match /incidents/{incidentId} {
      // Admin full access
      allow get, list, read, write: if isAdmin();

      // Teachers: can create incidents, and can only read/list incidents for their own class.
      allow create: if isTeacher();
      allow get, list, read: if isTeacher() && get(/databases/$(database)/documents/incidents/$(incidentId)).data.teacherId == request.auth.uid;
    }
    
    // Summaries collection
    match /summaries/{summaryId} {
      allow get, list, read, write: if isAdmin();
      allow get, list, read: if isTeacher() && resource.data.classId in getTeacherClasses();
    }

    // Classes collection
    match /classes/{classId} {
      allow read, write: if isAdmin();
      allow read: if isTeacher() && classId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.classId;
    }

    match /classes/{classId}/students/{studentId} {
       allow read, write: if isAdmin();
       allow read: if isTeacher() && classId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.classId;
    }

    // Utility functions
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }

    function isTeacher() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "teacher";
    }

    function getTeacherClasses() {
      return [get(/databases/$(database)/documents/users/$(request.auth.uid)).data.classId];
    }
  }
}
