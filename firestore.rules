
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users collection
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
       // Admins can read all user profiles
      allow get, list: if request.auth != null && isAdmin();
    }

    match /classes/{classId} {
      // Admins can manage classes
      allow read, write: if request.auth != null && isAdmin();
    }

    // This rule allows admins to query the 'students' collection group.
    match /{path=**}/students/{studentId} {
       allow get, list, read: if request.auth != null && isAdmin();
       // Teachers can read students in their own class.
       allow get, list, read: if request.auth != null && isTeacher() && get(/databases/$(database)/documents/classes/$(studentId)).data.classId == getUserData().classId;
    }

    // Incidents collection
    match /incidents/{incidentId} {
      // Admin full access
      allow read, write: if request.auth != null && isAdmin();

      // Teachers can create incidents for students in their class.
      allow create: if request.auth != null && isTeacher() && request.resource.data.teacherId == request.auth.uid;

      // Teachers can only read incidents they created.
      allow read: if request.auth != null && isTeacher() && resource.data.teacherId == request.auth.uid;
    }

    // Helper functions
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }

    function isTeacher() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "teacher";
    }

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
  }
}
